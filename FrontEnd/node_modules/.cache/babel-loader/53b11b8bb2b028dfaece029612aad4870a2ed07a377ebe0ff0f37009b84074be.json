{"ast":null,"code":"import * as Yup from \"yup\";\nexport const ownerRegisterShema = Yup.object().shape({\n  nameOwner: Yup.string().required(\"Ingrese el nombre\"),\n  telOwner: Yup.number().typeError(\"Ingrese numeros\").required(\"El Telefono es necesario\"),\n  direccOwner: Yup.string().required(\"La direccion es necesaria\"),\n  emailOwner: Yup.string().email(\"Digite un valor valido de Email\").required(\"El correo es necesario\"),\n  passwordOwner: Yup.string().min(6, \"La contrase単a debe contener minimo 6 caracteres\").required(\"Contrase単a requerida\")\n});","map":{"version":3,"names":["Yup","ownerRegisterShema","object","shape","nameOwner","string","required","telOwner","number","typeError","direccOwner","emailOwner","email","passwordOwner","min"],"sources":["/home/JDAAR/Documentos/Estudio/THECH/Laboratorios/proyectoperritos/src/schemas/ownerRegister.js"],"sourcesContent":["import * as Yup from \"yup\";\n\nexport const ownerRegisterShema = Yup.object().shape({\n  nameOwner: Yup.string().required(\"Ingrese el nombre\"),\n  telOwner: Yup.number()\n    .typeError(\"Ingrese numeros\")\n    .required(\"El Telefono es necesario\"),\n  direccOwner: Yup.string().required(\"La direccion es necesaria\"),\n  emailOwner: Yup.string()\n    .email(\"Digite un valor valido de Email\")\n    .required(\"El correo es necesario\"),\n  passwordOwner: Yup.string()\n    .min(6, \"La contrase単a debe contener minimo 6 caracteres\")\n    .required(\"Contrase単a requerida\"),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,kBAAkB,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACnDC,SAAS,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,mBAAmB,CAAC;EACrDC,QAAQ,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CACnBC,SAAS,CAAC,iBAAiB,CAAC,CAC5BH,QAAQ,CAAC,0BAA0B,CAAC;EACvCI,WAAW,EAAEV,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,2BAA2B,CAAC;EAC/DK,UAAU,EAAEX,GAAG,CAACK,MAAM,CAAC,CAAC,CACrBO,KAAK,CAAC,iCAAiC,CAAC,CACxCN,QAAQ,CAAC,wBAAwB,CAAC;EACrCO,aAAa,EAAEb,GAAG,CAACK,MAAM,CAAC,CAAC,CACxBS,GAAG,CAAC,CAAC,EAAE,iDAAiD,CAAC,CACzDR,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}